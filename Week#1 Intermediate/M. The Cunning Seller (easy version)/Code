#include <iostream>

using namespace std;

int check(int n) {
    if (n < 1) return 0;
    while (n > 1) {
        if (n % 3 != 0)
            return 0;
        n /= 3;
    }
    return 1;
}

long long largestPowerOf3(int n) {
    long long p = 1;
    while (p * 3LL <= n) {
        p *= 3;
    }
    return p;
}

int powerIndex(long long p) {
    int x = 0;
    while (p > 1) {
        p /= 3;
        x++;
    }
    return x;
}

long long result(int n) {
    if (n == 0)
        return 0;
    if (n < 3)
        return n * 3;

    long long p = largestPowerOf3(n);

    int rem = n - p;

    int x = powerIndex(p);

    long long part = p * 3 + x * (p / 3);
    return part + result(rem);
}


int main() {

    int cases;
    cin >> cases;

    for (int i = 0; i < cases; i++) {
        int n;
        cin >> n;

        cout << result(n) << endl;

    }
}
